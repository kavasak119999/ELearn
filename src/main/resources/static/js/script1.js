// // –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–ª–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ
const subscriptionKey = '';
const region = 'westeurope';
const endpoint = 'https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&to=uk';

const searchButton = document.querySelector('#search-button');
const definition = document.querySelector('.definition');

if (searchButton) {
    searchButton.addEventListener('click', function() {
        const searchInput = document.querySelector('#search');

        let word = searchInput.value.toLowerCase();
        let definitionText = '';

        fetch(`https://api.dictionaryapi.dev/api/v2/entries/en_US/${word}`)
            .then(response => response.json())
            .then(data => {
                // –ï—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
                const firstMeaning = data[0].meanings[0];
                definitionText = firstMeaning.definitions[0].definition;
                translateText(definitionText, definition);


                // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ª–æ–≤–æ –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                const wordSpan = document.querySelector('.word');
                word = word.replace(word.charAt(0),word.charAt(0).toUpperCase());
                translateText(word, wordSpan)

                searchInput.value = ''
            })
            .catch(error => {
                // –ï—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                const wordSpan = document.querySelector('.word');
                wordSpan.textContent = '';
                definition.innerHTML = `<p>–°–ª–æ–≤–æ "${word}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ª–æ–≤–∞—Ä–µ.</p>`;
            });
    });

}

function translateText(x, z) {
    const requestBody = [{
        'text': x
    }];


    const xhr = new XMLHttpRequest();
    xhr.open('POST', endpoint);
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.setRequestHeader('Ocp-Apim-Subscription-Key', subscriptionKey);
    xhr.setRequestHeader('Ocp-Apim-Subscription-Region', region);
    xhr.onreadystatechange = function () {
        if (xhr.readyState === XMLHttpRequest.DONE) {
            const response = JSON.parse(xhr.responseText);
            let translatedText = response[0].translations[0].text;
            if(definition === z){
                z.innerHTML = 'üá∫üá∏<i>' + x + '</i><br>üá∫üá¶' + translatedText;
            } else{
                translatedText = translatedText.toLowerCase();
                z.innerHTML = x + ' - ' + translatedText;
            }

        }
    };
    xhr.send(JSON.stringify(requestBody));
}